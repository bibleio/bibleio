
---
import { getCollection, render, type CollectionEntry } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import { Prose } from "@bibleio/design";
import { HandbookSidebar } from "~/components/handbook/Sidebar";
import { matchAuthorNames } from "~/utils/matchAuthorName";

const pages = await getCollection("handbook", ({ data }) => {
	// hide drafts in prod
	return import.meta.env.PROD ? data.draft !== true : true;
});

export async function getStaticPaths() {
	const pages = await getCollection("handbook", ({ data }) => {
		// hide drafts in prod
		return import.meta.env.PROD ? data.draft !== true : true;
	});

	return pages.map((page) => ({
		params: { id: page.id },
		props: { page },
	}));
}

const categoryOrder = ["organization", "design", "engineering", "community"];

const pagesByCategory = pages.reduce(
	(acc, page) => {
		const category = page.data.category || "uncategorized";
		if (!acc[category]) {
			acc[category] = [];
		}
		acc[category].push(page);

		const orderedKeys = [...categoryOrder, ...Object.keys(acc)].filter(
			(key, index, self) => self.indexOf(key) === index,
		);
		const orderedAcc: Record<string, CollectionEntry<"handbook">[]> = {};

		for (const key of orderedKeys) {
			if (acc[key]) {
				orderedAcc[key] = acc[key];
			}
		}

		return orderedAcc;
	},
	{} as Record<string, typeof pages>,
);

const { page } = Astro.props;
const { Content } = await render(page);
---

<Layout title="Handbook">
  <section id="main" class="flex max-[600px]:flex-col justify-center text-text min-h-screen pt-96 pb-64">
    <section id="main" class="max-w-[85rem] w-full relative flex max-[600px]:flex-col gap-12">
      <HandbookSidebar client:load pathname={Astro.url.pathname} pagesByCategory={pagesByCategory} category={page.data.category || "organization"} />
      <div id="content" class="bg-fg-1 backdrop-blur-popup border border-stroke rounded-16 w-full h-fit max-[500px]:pb-64  min-h-screen flex flex-col p-32 max-[600px]:p-12 gap-24 items-center">
        <div class="max-w-[32rem] w-full flex flex-col gap-12">
          <div class="flex gap-24 flex-wrap">
            <p class="text-sub">{matchAuthorNames(page.data.authors)}</p>
            <p class="text-sub capitalize max-[600px]:hidden">{page.data.category}</p>
            <p class="text-sub">{page.data.lastUpdated.toDateString()}</p>
          </div>
          <h1 class="text-h1">{page.data.title}</h1>
          <Prose><Content /></Prose>
        </div>
      </div>
    </section>
  </section>
</Layout>
