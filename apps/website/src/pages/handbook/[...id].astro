---
import { getCollection, render, type CollectionEntry } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import { Prose } from "@bibleio/design";
import { HandbookSidebar } from "~/components/handbook/Sidebar";
import { matchAuthorNames } from "~/utils/matchAuthorName";

const pages = await getCollection("handbook", ({ data }) => {
  // hide drafts in prod
  return import.meta.env.PROD ? data.draft !== true : true;
});

export async function getStaticPaths() {
  const pages = await getCollection("handbook", ({ data }) => {
    // hide drafts in prod
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  return pages.map((page) => ({
    params: { id: page.id },
    props: { page },
  }));
}

const categoryOrder = ["organization", "design", "engineering", "community"];

const pagesByCategory = pages.reduce(
  (acc, page) => {
    const category = page.data.category || "uncategorized";
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(page);

    const orderedKeys = [...categoryOrder, ...Object.keys(acc)].filter(
      (key, index, self) => self.indexOf(key) === index
    );
    const orderedAcc: Record<string, CollectionEntry<"handbook">[]> = {};

    for (const key of orderedKeys) {
      if (acc[key]) {
        orderedAcc[key] = acc[key];
      }
    }

    return orderedAcc;
  },
  {} as Record<string, typeof pages>
);

const { page } = Astro.props;
const { Content } = await render(page);
---

<Layout title="Handbook">
  <section
    id="main"
    class="text-text flex min-h-screen justify-center px-32 pb-64 pt-96 max-[600px]:flex-col"
  >
    <section
      id="main"
      class="relative flex w-full max-w-[85rem] gap-12 max-[600px]:flex-col"
    >
      <HandbookSidebar
        client:load
        pathname={Astro.url.pathname}
        pagesByCategory={pagesByCategory}
        category={page.data.category || "organization"}
      />
      <div
        id="content"
        class="bg-fg-1 backdrop-blur-popup border-stroke rounded-16 flex h-fit min-h-screen w-full flex-col items-center gap-24 border p-32 max-[600px]:p-12 max-[500px]:pb-64"
      >
        <div class="flex w-full max-w-[32rem] flex-col gap-12">
          <div class="flex flex-wrap gap-24">
            <a
              href={`/team#team`}
              class="text-sub hover:text-accent-reversed underline duration-150 ease-out"
              >{matchAuthorNames(page.data.authors)}</a
            >
            <p class="text-sub capitalize max-[600px]:hidden">
              {page.data.category}
            </p>
            <p class="text-sub">{page.data.lastUpdated.toDateString()}</p>
          </div>
          <h1 class="text-h1">{page.data.title}</h1>
          <Prose><Content /></Prose>
        </div>
      </div>
    </section>
  </section>
</Layout>
