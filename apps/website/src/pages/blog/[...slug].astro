---
import { Image } from "astro:assets";
import { getCollection, render, type CollectionEntry } from "astro:content";
import Prose from "@/components/Prose.astro";
import Layout from "@/layouts/Layout.astro";

const authors = await getCollection("team");

export async function getStaticPaths() {
	const pages = await getCollection("blog");

	return pages
		.filter((page) =>
			import.meta.env.PROD
				? page.data.properties.draft.checkbox !== true
				: true,
		)
		.map((page) => {
			return {
				params: {
					slug: page.data.properties.slug.rich_text[0].plain_text,
				},
				props: {
					page,
				},
			};
		});
}

export type Props = Awaited<ReturnType<typeof getStaticPaths>>[number]["props"];
const { page } = Astro.props;

const pageData = {
	title: page.data.properties.Name.title[0].plain_text,
	imageUrl:
		page.data.properties.image.files[0].type === "file"
			? page.data.properties.image.files[0].file.url
			: page.data.properties.image.files[0].external.url,
	date: new Date(page.data.properties.date.date?.start ?? ""),
	authors: page.data.properties.author.people
		.map((person: { id: string; object: string }) => {
			const matchedAuthor = authors.find(
				(author: CollectionEntry<"team">) =>
					author.data.notionUserId === person.id,
			);
			return matchedAuthor ? matchedAuthor.data.name : "Unknown";
		})
		.join(", "),
};

const { Content } = await render(page);
---

<Layout title={pageData.title}>
  <div
    class="flex min-h-screen flex-col items-center gap-24 px-256 py-96 text-text max-[1180px]:px-64 max-[800px]:px-16"
  >
    <Image
      width={1280}
      height={720}
      src={pageData.imageUrl}
      alt={pageData.title}
      class="aspect-[16/8] max-[600px]:aspect-square h-auto w-full rounded-16 border border-stroke object-cover"
    />
    <div class="flex flex-wrap justify-center gap-32">
      <p class="text-body leading-none">
        by {pageData.authors}
      </p>
      <time
        class="text-body leading-none"
      >
        {pageData.date.toDateString() || "Unknown date"}
      </time>
    </div>
    <h1
      class="mb-48 w-full text-center text-h1 leading-none max-[1350px]:text-h1 max-[460px]:text-h2"
    >
      {pageData.title}
    </h1>
    <div class="w-full max-w-[32rem] leading-[220%]">
      <Prose><Content /></Prose>
    </div>
  </div>
</Layout>
