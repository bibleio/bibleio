
---
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "~/layouts/Layout.astro";

const blogs = await getCollection("blog");
const authors = await getCollection("team");

interface FormattedBlog {
	slug: string;
	title: string;
	date: Date;
	authors: string[];
	imageUrl?: string; // Optional because frontmatter might not have it
}

const formattedBlogs: FormattedBlog[] = blogs
	.map((blog) => {
		if ("properties" in blog.data) {
			// notion entry (has the properties key)
			try {
				// Function to map Notion authors (relation IDs) to names
				const mapNotionAuthors = (authorRelations: { id: string }[]) => {
					return authorRelations.map((person: { id: string }) => {
						const matchedAuthor = authors.find(
							(author: CollectionEntry<"team">) =>
								author.data.notionUserId === person.id,
						);
						return matchedAuthor ? matchedAuthor.data.name : "Unknown";
					});
				};

				return {
					slug: blog.data.slug.rich_text[0].plain_text,
					title: blog.data.Name.title[0].plain_text,
					date: new Date(blog.data.date.date?.start ?? ""),
					authors: mapNotionAuthors(blog.data.author.relation), // Map relation IDs to author names
					imageUrl:
						blog.data.image.files[0].type === "file"
							? blog.data.image.files[0].file.url
							: blog.data.image.files[0].external.url,
				};
			} catch (error) {
				console.error("Error formatting Notion entry:", blog, error);
				return null;
			}
		} else {
			// fallback entry (doesn't have properties key)
			try {
				return {
					slug: blog.data.slug,
					title: blog.data.title,
					date: new Date(blog.data.date ?? ""),
					authors: blog.data.authors || [],
					imageUrl: blog.data.imageUrl,
				};
			} catch (error) {
				console.error("Error formatting frontmatter entry:", blog, error);
				return null; // Or some default/error handling
			}
		}
	})
	.filter((blog: FormattedBlog): blog is FormattedBlog => blog !== null) // Filter out any null entries from error handling
	.sort(
		(a: FormattedBlog, b: FormattedBlog) => b.date.getTime() - a.date.getTime(),
	);
---

<Layout title="Blog">
  <section
    id="landing"
    class="relative flex h-fit flex-col items-start justify-center gap-24 overflow-clip border-b border-stroke px-256 py-32 pt-[192px] max-[1550px]:px-16"
  >
    <h1
      class="motion-preset-slide-up-sm pt-72 text-center text-[100px] leading-none text-text-solid max-[1280px]:text-[5rem] max-[480px]:text-[4rem]"
    >
      Blog
    </h1>
    <div class="absolute left-0 top-0 -z-50 h-full w-full">
      <div
        class="absolute left-1/2 top-[-50%] h-[49vw] w-[40vw] animate-spin-slow rounded-full bg-yellow blur-[15vmin]"
      >
      </div>
      <div
        class="absolute bottom-[-15%] right-[-20%] h-[49vw] w-[45vw] animate-spin-slow rounded-full bg-green blur-[15vmin]"
      >
      </div>
      <div
        class="absolute bottom-[-50%] left-[20%] h-[49vw] w-[40vw] animate-spin-slow rounded-full bg-purple blur-[15vmin]"
      >
      </div>
    </div>
  </section>
  <section id="main" class="flex flex-col px-256 max-[1550px]:px-0 text-text">
    <div id="container" class="divide-y divide-stroke border-x border-stroke">
      <div class="grid grid-cols-4 max-[820px]:grid-cols-1">
        <div id="SIDEBAR" class="flex flex-col gap-0 col-span-1 divide-y divide-stroke border-stroke max-[820px]:border-b">
          <div class="flex flex-col p-24 gap-16">
            <p class="text-body leading-[200%]">On our blog we post about faith related topics, announcements regarding Bibleio, and our process engineering and making Bibleio.</p>
          </div>
        </div>
        <div id="BLOGS" class="flex flex-col gap-0 col-span-3 min-[820px]:border-l border-stroke">
          {formattedBlogs.length > 0 ?
            formattedBlogs.map((blog) => (
              <a
                href={`/blog/${blog.slug}`}
                class="grid grid-cols-2 max-[500px]:grid-cols-1 p-24 h-fit gap-24 border-b border-stroke text-text group last:border-b-transparent"
              >
                <div class="flex flex-col gap-24">
                  <h3 class="text-h3 leading-[150%] group-hover:text-accent-reversed duration-150 ease-out">
                    {blog.title}
                  </h3>
                  <div class="flex gap-24 flex-wrap gap-y-12">
                    <time class="text-body leading-none">
                      {blog.date.toDateString()}
                    </time>
                    {blog.authors.length > 0 && <p class="text-body leading-none">
                      by {blog.authors.join(", ")}
                    </p>}
                  </div>
                </div>
                {blog.imageUrl && <Image
                  class="rounded-8 border aspect-video object-cover border-stroke shadow-popup group-hover:border-accent-reversed duration-150"
                  width={1280}
                  height={720}
                  alt={blog.title}
                  src={blog.imageUrl}
                />}
              </a>
            )) :
            <div class="p-32 flex flex-col gap-12">
              <h1 class="text-h1">No blogs</h1>
              <p class="text-body">Come back later!</p>
            </div>
          }
          </div>
      </div>
    </div>
  </section>
</Layout>
