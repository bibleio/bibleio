---
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";

const blogs = await getCollection("blog");
type blogType = CollectionEntry<"blog">;
const authors = await getCollection("team");
type authorsType = CollectionEntry<"team">;
---

<Layout title="Apps">
  <section
    id="landing"
    class="relative flex h-fit  flex-col items-start justify-center gap-24 overflow-clip border-b border-stroke px-256 py-64 pt-[192px] max-[480px]:p-16"
  >
    <h1
      class="motion-preset-slide-up-sm pt-72 text-center text-[100px] leading-none text-text-solid max-[1280px]:text-[5rem] max-[480px]:text-[4rem]"
    >
      Blog
    </h1>
    <div class="absolute left-0 top-0 -z-50 h-full w-full">
      <div
        class="absolute left-1/2 top-[-50%] h-[49vw] w-[40vw] animate-spin-slow rounded-full bg-yellow blur-[50vmin]"
      >
      </div>
      <div
        class="absolute bottom-[-15%] right-[-20%] h-[49vw] w-[45vw] animate-spin-slow rounded-full bg-green blur-[50vmin]"
      >
      </div>
      <div
        class="absolute bottom-[-50%] left-[20%] h-[49vw] w-[40vw] animate-spin-slow rounded-full bg-purple blur-[50vmin]"
      >
      </div>
    </div>
  </section>
  <section id="main" class="flex flex-col px-256 max-[1550px]:px-0 text-text">
    <div id="container" class="divide-y divide-stroke border-x border-stroke">
      <div class="grid grid-cols-4 max-[820px]:grid-cols-1">
      <div class="flex flex-col gap-0 col-span-1 divide-y divide-stroke">
        <div class="flex flex-col p-24 gap-16">
          <p class="text-body leading-[200%]">On our blog we post about faith related topics, announcements regarding Bibleio, and our process engineering and making Bibleio.</p>
        </div>
        <div class="flex flex-col p-24 gap-16">
          <h3 class="text-h3">Tags</h3>
          <div class="flex gap-8">
            <i class="ti ti-check text-[1rem] text-text"></i>
          </div>
        </div>
      </div>
      <div class="flex flex-col gap-0 col-span-3 border-l border-stroke">
        {
          blogs.map((blog: blogType) => (
            <a
              href={`/blog/${blog.data.properties.slug.rich_text[0].plain_text}`}
              class="grid grid-cols-2 p-24 h-fit gap-24 border-b border-stroke text-text group"
            >
              <div class="flex flex-col gap-24">
                <h3 class="text-h3 leading-[150%] group-hover:text-accent-reversed duration-150 ease-out">{blog.data.properties.Name.title[0].plain_text}</h3>
                <div class="flex gap-24">
                  <time
                    class="text-body leading-none"
                  >
                    {(blog.data.properties.date.date || {}).start || "Unknown date"}
                  </time>
                  <p class="text-body leading-none">
                    by{" "}
                    {blog.data.properties.author.people
                      .map((person: { id: string; object: string }) => {
                        const matchedAuthor = authors.find(
                          (author: authorsType) => author.data.notionUserId === person.id
                        );
                        return matchedAuthor ? matchedAuthor.data.name : "Unknown";
                      })
                      .join(", ")}
                  </p>
                </div>
              </div>
              <Image class="rounded-8 border border-stroke shadow-popup group-hover:border-accent-reversed duration-150" width={1000} height={1000} alt={"Blog image"} src={blog.data.properties.image.files[0].file.url}/>
            </a>
          ))
        }
      </div>
    </div>
    </div>
  </section>
</Layout>
