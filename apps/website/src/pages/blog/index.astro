---
import { Image } from "astro:assets";
import { getImage } from "astro:assets";
import { getCollection } from "astro:content";
import { Bible, Circle, Cross, Hexagon, Star, Triangle } from "@bibleio/design";
import Layout from "../../layouts/Layout.astro";

const blogs = await getCollection("blog", ({ data }) => {
	return import.meta.env.PROD ? data.draft !== true : true;
});
---

<Layout title="Apps">
  <script>
    import { gsap } from 'gsap';

    // Scrolling animations

    document.addEventListener('DOMContentLoaded', () => {
      const scrollContainer = document.querySelector('.scroll-container');

      const scrollXItem = document.querySelector('.scroll-x') as HTMLElement;
      const itemXWidth = scrollXItem?.offsetWidth;

      const scrollYItem = document.querySelector('.scroll-y') as HTMLElement;
      const itemYHeight = scrollYItem?.offsetHeight;

      gsap.to('.scroll-x', {
        x: -itemXWidth,
        ease: 'none',
        duration: 33,
        repeat: -1,
        modifiers: {
          x: gsap.utils.unitize((value) => parseFloat(value) % itemXWidth),
        },
      });

      gsap.to('.scroll-y', {
        y: -itemYHeight,
        ease: 'none',
        duration: 33,
        repeat: -1,
        modifiers: {
          y: gsap.utils.unitize((value) => parseFloat(value) % itemYHeight),
        },
      });
    });

    // "Bibleio" landing text animation

    const text = document.querySelector('.animate-bounce-in') as HTMLElement;

    if (text && text.textContent) {
      const words = text.textContent.split(/(\s+)/);
      text.innerHTML = words
        .map((word) => {
          // For actual words, wrap each letter in a span
          return `<span class="word inline-block">
            ${Array.from(word)
              .map(
                (letter) => `<span class="letter inline-block">${letter}</span>`
              )
              .join('')}
          </span>`;
        })
        .join('');

      // Create the GSAP animation
      gsap.from('.animate-bounce-in span', {
        opacity: 0,
        scale: 0,
        duration: 0.5,
        y: 75,
        ease: 'back.out(.1)',
        stagger: {
          amount: 0.35,
          from: 'start',
        },
      });
    } else {
      console.warn('Animation target element not found');
    }
  </script>

  <section
    id="landing"
    class="relative flex h-[66vh] flex-col items-start justify-center gap-24 overflow-clip border-b border-stroke px-256 py-16 max-[480px]:p-16"
  >
    <h1
      class="animate-bounce-in pt-72 text-center text-[192px] leading-none text-text-solid max-[1280px]:text-[8rem] max-[480px]:text-[5.75rem]"
    >
      Blog
    </h1><div
      class="scroll-container absolute right-[30%] -z-50 flex flex-col items-center justify-center gap-64"
    >
      <div class="scroll-y flex h-full w-full flex-col items-center gap-64">
        <Cross />
        <Bible />
        <Circle />
        <Star />
        <Hexagon />
        <Triangle />
        <Bible />
      </div>
      <div class="scroll-y flex h-full w-full flex-col items-center gap-64">
        <Cross />
        <Bible />
        <Circle />
        <Star />
        <Hexagon />
        <Triangle />
      </div>
    </div>
  </section>
  <section id="main" class="flex flex-col px-256 max-[1550px]:px-0">
    <div id="container" class="divide-y divide-stroke border-l border-stroke">
      <div class="grid grid-cols-2 max-[820px]:grid-cols-1">
        {
          blogs.map((blog) => (
            <a
              href={`/blog/${blog.slug}`}
              class="flex flex-col border-b border-r border-stroke text-text"
            >
              <Image
                alt={blog.data.title}
                src={blog.data.image}
                width={1200}
                height={600}
                class="aspect-[16/6] h-auto w-full object-cover"
              />
              <div class="flex h-fit flex-col gap-12 px-48 py-24 max-[580px]:p-16">
                <h3 class="text-h3 leading-none">{blog.data.title}</h3>
                <time
                  class="text-body leading-none"
                  datetime={blog.data.date.toISOString()}
                >
                  {blog.data.date.toDateString()}
                </time>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </section>
</Layout>
