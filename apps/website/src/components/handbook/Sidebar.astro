---
import { getCollection, type CollectionEntry } from "astro:content";
import { ListItem } from "@bibleio/design";
import { Image } from "astro:assets";

const pages = await getCollection("handbook");

const categoryOrder = ["organization", "design", "engineering", "community"];

const pagesByCategory = pages.reduce(
	(acc, page) => {
		const category = page.data.category || "uncategorized";
		if (!acc[category]) {
			acc[category] = [];
		}
		acc[category].push(page);

		const orderedKeys = [...categoryOrder, ...Object.keys(acc)].filter(
			(key, index, self) => self.indexOf(key) === index,
		);
		const orderedAcc: Record<string, CollectionEntry<"handbook">[]> = {};

		for (const key of orderedKeys) {
			if (acc[key]) {
				orderedAcc[key] = acc[key];
			}
		}

		return orderedAcc;
	},
	{} as Record<string, typeof pages>,
);

interface Props {
	imageCategory?: string;
}

const { imageCategory } = Astro.props;
---


<div id="sidebar" class="flex sticky top-96 flex-col gap-20 w-[16rem] self-start
max-[600px]:relative max-[600px]:p-24 max-[600px]:w-full max-[600px]:top-0 max-[600px]:bg-fg-1 backdrop-blur-popup max-[600px]:border-stroke max-[600px]:border max-[600px]:rounded-16">
  <Image
    class="rounded-8 border border-stroke aspect-[2/3] w-[8.75rem] h-auto max-[600px]:hidden"
    alt={"handbook cover"}
    width={280}
    height={420}
    src={imageCategory === "organization" ? "/handbook/handbook-org.png"
      : imageCategory === "community" ? "/handbook/handbook-community.png"
      : imageCategory === "design" ? "/handbook/handbook-design.png"
      : imageCategory === "engineering" ? "/handbook/handbook-engineering.png"
      : "/handbook/handbook-org.png"}
  />
  <h2 class="text-h2 max-[600px]:hidden">Handbook</h2>
  {Object.entries(pagesByCategory).map(([category, pages]) => (
    <div class="flex flex-col gap-0 w-full">
      <div class="flex pb-6"><p class="text-body text-text opacity-75 capitalize">{category}</p></div>
      <div class="flex flex-col gap-0">
        {pages.map((page) => (
          <a
            href={`/handbook/${page.id}`}
          >
            <ListItem text={page.data.title} selected={Astro.url.pathname.endsWith(`/handbook/${page.id}`) || Astro.url.pathname.endsWith(`/handbook/${page.id}/`)} />
          </a>
        ))}
      </div>
    </div>
  ))}
</div>
